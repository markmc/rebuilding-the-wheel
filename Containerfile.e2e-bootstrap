FROM fedora:39

# NOTE: The bootstrap image needs all of the system dependencies, for
#       now. Ideally the bootstrapping process will not be needed in
#       production.

# The diff command is needed in tests run while building patchelf
#
# The base layer is minimal, so instead of tracking individual tools
# needed by different build steps or scripts we just install the
# development environment.
RUN dnf -y groupinstall "Development Tools" "Development Libraries"

# Commands needed in test.sh
RUN dnf -y install procps-ng jq patch

# cmake needed, otherwise:
# Building wheels for collected packages: patchelf, ninja
# ...
# Building wheel for patchelf (pyproject.toml) did not run successfully.
# ...
# Problem with the CMake installation, aborting build. CMake executable is cmake
#
# autoconf/automake needed, otherwise e.g.:
# [ 44%] Performing patch step for 'build_patchelf'
# ./bootstrap.sh: line 2: autoreconf: command not found
RUN dnf -y install cmake autoconf automake

# C extension compilation
RUN dnf -y install  gcc g++

# Our ninja wheels wrap the ninja-build RPM package
RUN dnf -y install ninja-build

# rust/cargo needed, otherwise:
# Building wheels for collected packages: maturin
# error: can't find Rust compiler
RUN dnf -y install rust cargo

# Needed for cffi build
RUN dnf -y install libffi libffi-devel

# Needed for cryptography build
RUN dnf -y install openssl-devel

# Needed for pillow build
RUN dnf -y install zlib-devel libjpeg-devel

# Python dependencies (last in case we want to change versions)
# python3.12-devel needed for 3.12 builds (on CentOS Stream 9)
RUN dnf -y install python3.9 python3.12 python3.12-devel

# Which version of Python should be used?
ARG PYTHON
RUN $PYTHON --version

# Create a virtualenv for our tools
RUN $PYTHON -m venv /venv \
    && /venv/bin/pip install --upgrade pip

# Activate the virtualenv
ENV VIRTUAL_ENV=/venv
ENV PATH=$VIRTUAL_ENV/bin:$PATH

# Install the mirror-builder software
COPY . /mirror-builder
RUN pip install /mirror-builder

WORKDIR /src

# Which package should be bootstrapped?
ARG TOPLEVEL

RUN python3 -m mirror_builder \
    --work-dir /work-dir \
    --sdists-repo /sdists-repo \
    --wheels-repo /wheels-repo \
    bootstrap ${TOPLEVEL}



# Create a minimal image as output containing only the
# build-order.json file.
FROM scratch
COPY --from=0 /work-dir/build-order.json /work-dir/build-order.json
